// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "alt+f3",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "alt+f5",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.tasks.runTask"
    },
    {
        "key": "shift+alt+p",
        "command": "projectManager.listProjectsNewWindow"
    },
    {
        "key": "ctrl+f10",
        "command": "editor.debug.action.runToCursor"
    },
    {
        "key": "shift+alt+o",
        "command": "projectManager.listProjects"
    },
    {
        "key": "f7",
        "command": "workbench.debug.viewlet.action.disableAllBreakpoints"
    },
    {
        "key": "f6",
        "command": "workbench.debug.viewlet.action.enableAllBreakpoints"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.tasks.terminate"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.tasks.showTasks"
    },
    {
        "key": "alt+`",
        "command": "workbench.action.togglePanelPosition"
    },
    {
        "key": "alt+b",
        "command": "workbench.action.tasks.test"
    },
    {
        "key": "ctrl+f9",
        "command": "editor.action.sortLinesAscending"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "editor.action.sortLinesDescending"
    },
    {
        "key": "f9",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+/",
        "command": "editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "shift+alt+o",
        "command": "-editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "alt+e",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "shift+alt+e",
        "command": "revealFileInOS"
    },
    {
        "key": "alt+p",
        "command": "git.checkout"
    },
    {
        "key": "alt+m",
        "command": "git.merge"
    },
    {
        "key": "enter",
        "command": "-acceptSelectedSuggestionOnEnter",
        "when": "acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
    }
]
